//   ----------------------------------------------------------- //
//    MULTI_ILS.M            
//
//   ultima atualizaçao 2020
//   Marcelo P. A. Ribeiro
//   ----------------------------------------------------------- //

clc; clear ; for i = 1:20; close ; end;

exec('lib_multi/func_multi_ILS_new.sci');
exec('lib_multi/pls.sci');
exec('lib_ekf/EKFGOS.sci');

//// número máximo de regressores para avaliar na  Validacao Cruzada
kmax = 10; // está relacionado com os componentes que estão contidos na amostra (não colocar muito )

//------------------------------------------------------------------
//Número de Analitos (colunas no arquivo de concentrações)
// -----------------------------------------------------------------
nc = 5;
//------------------------------------------------------------------
//Nome dos Analitos e unidade de concentração
// -----------------------------------------------------------------
cname = ['di', 'gli', 'gal', 'gos3','gos4'];
unid = 'M';

// --------------------------------------------------------------
//Carregando os dados
// --------------------------------------------------------------
// x = matriz de concentracoes [nc x nd]
// absor = matriz com as absorbancias, sendo a primeira linha o comprimento
// de onda [nd+1 x nl]

//x0 = fscanfMat('X_Multi_NIRA2020.txt');     
//absor0 = fscanfMat('Abs_Multi_NIRA2020.txt'); 
//x0 = fscanfMat('X_Multi_UV2020.txt');     
//absor0 = fscanfMat('Abs_Multi_UV2020.txt'); 
//x00 = fscanfMat('X_Multi_UV2019.txt');     
//absor00 = fscanfMat('Abs_Multi_UV2019.txt');
////
//x0 = [x0 ; x00]
//absor0 = [absor0 ; absor00(2:$,:)] 

x0=[]
absor0 = []
for i=[2:3] // 1 e 8 estão ruins
    if i<10 then
        arqent = '0'+string(i)+'.dat'
    else
        arqent = string(i)+'.dat'
    end
    xlendo = fscanfMat('x'+arqent);
    absorlendo = fscanfMat('abs'+arqent); 
    x0=[x0;xlendo]
    absor0=[absor0;absorlendo(2:$,:)]
end
absor0 = [absorlendo(1,:);absor0]

////////////// Simulando dados //////////////////////

x0 = [x0,repmat(x0(:,2:5),1,1)] //concs de 9 espécies, rank <= 5, por algum motivo não ficou singular
klb = x0\absor0(2:$,:)
absorsimu = x0*klb
[P] = pls(absorsimu,x0,kmax)
concsimu = absorsimu*P
A = EKFGOS()



